pipeline {
	agent none

	stages{
		stage("build"){
			when {
				changeset "**/result/**"
			}
            agent{
                docker{
                   image 'node:8.16.0-alpine'
                }
            }
			steps{
				echo 'Compiling result app'
				dir('result'){
					sh 'npm install'
       			}
     		}
   		}
		stage("test"){
			when{
				changeset "**/result/**"
			}
            agent{
                docker{
                   image 'node:8.16.0-alpine'
                }
            }
			steps{
				echo 'Running Unit Tests on result app'
				dir('result') {
					sh 'npm install && npm test'
			 	}
			}
		}
        stage("docker-package"){
            when{
                branch 'master'
                changeset "**/result/**"
            }
            steps{
                echo 'Packaging result app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/','dockerlogin'){
                        def resultImage = docker.build("whentimeslows/result:v${env.BUILD_ID}", "./result")
                        resultImage.push()
                        resultImage.push("{$env.BRANCH_NAME}")
                        resultImage.push("latest")
                    }
                }
            }       
        }
	}
	post{
		always{
			echo 'Building multibranch pipeline for result is completed..'
		}
		failure{
			slackSend (channel: "#lfs261", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
		}
		success{
			slackSend (channel: "#lfs261", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
		}
	}
}
